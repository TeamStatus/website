var async=require("async"),Bamboo=require("./lib/bamboo.js"),cache=require("memory-cache"),cheerio=require("cheerio");_=require("underscore"),module.exports=function(e,r,n){function s(e,r){if(e&&e.length){var n=function(e,r){l.getPlansFromProject(e,function(n,s){return n?(u.error('error accesing build "'+e+'": '+n),r(null,[])):r(null,s)})};async.map(e,n,function(e,n){r(e,_.flatten(n))})}else r(null,[])}function o(e,r){return e&&e.length?s(e,function(e,n){return!e&&n&&n.length?async.map(n,a,function(e,n){r(e,n)}):r(e,[])}):r(null,[])}if(!e.server||!e.server.address)return n("No Bamboo server configured");if(!e.server.username||!e.server.password)return n("No Bamboo credentials found");if(!e.showBuilds&&!e.failBuilds)return n("No Bamboo builds");var u=r.logger,i=e.server.username,t=e.server.password,l=new Bamboo(e.server.address,i,t,r.request,cache,cheerio),a=function(r,n){l.getPlanInfo(r,function(s,o){var i={link:e.server.address+"/browse/"+r,planKey:r,planName:r,responsible:[],isRefreshing:!1,success:"",down:!1};if(s||!o)return i.down=!0,u.error(s?"error accessing build info for plan "+r+": "+s:"non build info available for plan "+r),n(null,i);i.planName=o.planName;var t=o.key.replace("-"+o.number,"-"+(o.number+1));return l.getBuildStatus(t,function(e,s){return e||!s?(i.down=!0,u.error(e?e:"error getting build info for plan "+r),n(null,i)):(i.isRefreshing=!s.finished,i.isRefreshing&&(i.progress=s.progress.percentageCompletedPretty,i.timeRemaining=s.progress.prettyTimeRemaining.replace(" remaining","")),"Successful"==o.state?(i.success="successful",n(null,i)):(i.failedTestCount=o.failedTestCount,i.testCount=o.failedTestCount+o.quarantinedTestCount+o.successfulTestCount,i.successfulTestCount=o.successfulTestCount,i.quarantinedTestCount=o.quarantinedTestCount,l.getResponsible(o.key,function(e,r){return e||!r?(i.down=!0,n(null,i)):(i.success="failed",i.responsible=r,n(e,i))})))})})},c=function(e,r){function n(e){return e.down===!0?20:"failed"===e.success?10:0}return n(e)>n(r)};void 0===e.showBuilds&&(e.showBuilds="");var f=e.failBuilds?_.compact(e.failBuilds.replace(/\s+/g,"").split(",")):[],d=e.showBuilds?_.compact(e.showBuilds.replace(/\s+/g,"").split(",")):[],p=[f,d];return console.log("Builds %j",p),async.map(p,o,function(r,s){r?(u.error(r),n(r)):n(null,{showBuilds:s[1].sort(c),failBuilds:s[0].sort(c),title:e.widgetTitle})})};