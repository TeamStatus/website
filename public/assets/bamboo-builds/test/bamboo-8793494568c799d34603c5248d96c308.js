var assert=require("assert"),Bamboo=require("../lib/bamboo.js"),cheerio=require("cheerio");describe("buildoverview",function(){var e,r={put:function(){},get:function(){}},n=function(e){return function(r,n){n(null,{statusCode:200},e)}},t=function(e){return new Bamboo("url","user","password",e,r,cheerio)};beforeEach(function(r){e={interval:2e4,failBuilds:["CONFUI-QUNITFFESR","CONFUI-QUNITFFLATEST","CONFUI-QUNITCHROMEPLUGINS","CONFUI-QUNITCHROMELATEST","CONFUI-QUNITQCFFLATEST","CONFUI-QUNITQEFFLATEST11"],showBuilds:[],widgetTitle:"QUNIT BUILDS"},e.globalAuth={cbac:{username:"myusername",password:"secretpassword"}},r()}),describe("responsability",function(){it("should return the correct users for a certain html chunk",function(e){var r='<div id=page><div class=responsible-summary><ul><li><img src=""><a href="">username</a></li><li><img src=""><a href="">username 2</a></li></ul></div></div>',s=t(n(r)),o="test";s.getResponsible(o,function(r,n){assert.ok(!r),assert.equal(n.length,2),assert.equal(n[1].name,"username 2"),e()})}),it("should return error if there is an error during the http call",function(e){var r=t(function(e,r){r("err",{statusCode:500},"{}")}),n="test";r.getResponsible(n,function(r,n){assert.ok(r),assert.equal(n,null),e()})})}),describe("project_to_plans",function(){it("should be a valid build string",function(e){var r=t(n("{}")),s="";r.getPlansFromProject(s,function(r){assert.ok(r),e()})}),it("should return one plan if dash found in build (plan key)",function(e){var r=t(n("{}")),s="test-test";r.getPlansFromProject(s,function(r,n){assert.ok(!r),assert.equal(n.length,1),e()})})}),describe("get_plan_info",function(){it("should return plan info",function(e){var r=t(n('{"planName":"Main Build"}')),s="TEST";r.getPlanInfo(s,function(r,n){assert.ok(!r),assert.ok(n.planName),e()})}),it("should handle error if server return error",function(e){var r=t(function(e,r){r("error",{statusCode:500},null)}),n="TEST";r.getPlanInfo(n,function(r,n){assert.ok(r),assert.ok(!n),e()})}),it("should handle error if server return ok status code but json is invalid",function(e){var r=t(n("-invalid json-")),s="TEST";r.getPlanInfo(s,function(r,n){assert.ok(r),assert.ok(!n),e()})})})});